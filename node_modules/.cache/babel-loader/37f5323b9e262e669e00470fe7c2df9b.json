{"ast":null,"code":"var _jsxFileName = \"/Users/abhinavshirur/Documents/Projects/my-app/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport { fetchQuizQuestions } from './Api'; //Components import\n\nimport { QuestionCard } from './components/QuestionCard'; //Types import\n\nimport { Difficulty } from './Api'; //Styles\n\nimport { GlobalStyle } from './App.styles';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nimport { Fragment as _Fragment } from \"react/jsx-dev-runtime\";\nconst TOTAL_QUESTIONS = 10;\n\nconst App = () => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [questions, setQuestions] = useState([]);\n  const [number, setNumber] = useState(0);\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(true);\n\n  const startTrivia = async () => {\n    setLoading(true);\n    setGameOver(false);\n    const newQuestions = await fetchQuizQuestions(TOTAL_QUESTIONS, Difficulty.EASY);\n    setQuestions(newQuestions);\n    setScore(0);\n    setUserAnswers([]);\n    setNumber(0);\n    setLoading(false);\n  };\n\n  const checkAnswer = e => {\n    if (!gameOver) {\n      const answer = e.currentTarget.value;\n\n      if (answer === questions[number].correct_answer) {\n        setScore(score + 1);\n      }\n\n      const userAnswerObject = {\n        question: questions[number].question,\n        answer: answer,\n        correct: answer === questions[number].correct_answer ? true : false,\n        correctAnswer: questions[number].correct_answer\n      };\n      setUserAnswers([...userAnswers, userAnswerObject]);\n    }\n  };\n\n  const nextQuestion = () => {\n    const nextQuestion = number + 1;\n\n    if (nextQuestion === TOTAL_QUESTIONS) {\n      setGameOver(true);\n    } else {\n      setNumber(nextQuestion);\n    }\n  };\n\n  return /*#__PURE__*/_jsxDEV(_Fragment, {\n    children: [/*#__PURE__*/_jsxDEV(GlobalStyle, {}, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 76,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"div\", {\n      className: \"App\",\n      children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n        children: \"My Quiz App\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 78,\n        columnNumber: 7\n      }, this), gameOver || userAnswers.length === TOTAL_QUESTIONS ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Start\",\n        onClick: startTrivia,\n        children: \"Start\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 81,\n        columnNumber: 9\n      }, this) : null, !gameOver ? /*#__PURE__*/_jsxDEV(\"p\", {\n        className: \"score\",\n        children: [\"Score:\", score]\n      }, void 0, true, {\n        fileName: _jsxFileName,\n        lineNumber: 85,\n        columnNumber: 21\n      }, this) : null, loading ? /*#__PURE__*/_jsxDEV(\"p\", {\n        children: \"Loading Questions...\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 88,\n        columnNumber: 19\n      }, this) : null, !loading && !gameOver && /*#__PURE__*/_jsxDEV(QuestionCard, {\n        questionNr: number + 1,\n        totalQuestions: TOTAL_QUESTIONS,\n        question: questions[number].question,\n        answers: questions[number].answers,\n        userAnswer: userAnswers ? userAnswers[number] : undefined,\n        callback: checkAnswer\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 91,\n        columnNumber: 9\n      }, this), !loading && !gameOver && userAnswers.length === number + 1 && number !== TOTAL_QUESTIONS - 1 ? /*#__PURE__*/_jsxDEV(\"button\", {\n        className: \"Next\",\n        onClick: nextQuestion,\n        children: \"Next\"\n      }, void 0, false, {\n        fileName: _jsxFileName,\n        lineNumber: 103,\n        columnNumber: 10\n      }, this) : null]\n    }, void 0, true, {\n      fileName: _jsxFileName,\n      lineNumber: 77,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true);\n};\n\n_s(App, \"3vxO9CiM0ITniaGpI+eu+AjXM9U=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","fetchQuizQuestions","QuestionCard","Difficulty","GlobalStyle","TOTAL_QUESTIONS","App","loading","setLoading","questions","setQuestions","number","setNumber","userAnswers","setUserAnswers","score","setScore","gameOver","setGameOver","startTrivia","newQuestions","EASY","checkAnswer","e","answer","currentTarget","value","correct_answer","userAnswerObject","question","correct","correctAnswer","nextQuestion","length","answers","undefined"],"sources":["/Users/abhinavshirur/Documents/Projects/my-app/src/App.tsx"],"sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\nimport { fetchQuizQuestions } from './Api';\n\n//Components import\nimport {QuestionCard} from './components/QuestionCard';\n\n//Types import\nimport { Difficulty, QuestionState } from './Api';\n\n//Styles\nimport {GlobalStyle} from './App.styles';\n\nconst TOTAL_QUESTIONS = 10;\n\nexport type AnswerObject = {\n  question: string,\n  answer: string,\n  correct: boolean,\n  correctAnswer: string\n}\n\nconst App = () => { \n\n  const [loading, setLoading] = useState<boolean>(false);\n  const [questions, setQuestions] = useState<QuestionState[]>([]);\n  const [number, setNumber] = useState<number>(0);\n  const [userAnswers, setUserAnswers] = useState<AnswerObject[]>([]);\n  const [score, setScore] = useState<number>(0);\n  const [gameOver, setGameOver] = useState<boolean>(true);\n\n  const startTrivia = async () => {\n    setLoading(true);\n    setGameOver(false);\n\n    const newQuestions = await(fetchQuizQuestions(\n      TOTAL_QUESTIONS,\n      Difficulty.EASY\n    ));\n\n    setQuestions(newQuestions);\n    setScore(0);\n    setUserAnswers([]);\n    setNumber(0);\n    setLoading(false);\n  }\n\n  const checkAnswer = (e: React.MouseEvent<HTMLButtonElement>) => {\n    if(!gameOver){\n      const answer = e.currentTarget.value;\n      if(answer === questions[number].correct_answer){\n        setScore(score+1);\n      }\n      const userAnswerObject = {\n        question: questions[number].question,\n        answer: answer,\n        correct: answer === questions[number].correct_answer ? true : false,\n        correctAnswer: questions[number].correct_answer\n      }\n      setUserAnswers([...userAnswers, userAnswerObject]);\n    }\n  }\n\n  const nextQuestion = () => {\n    const nextQuestion = number+1;\n    if(nextQuestion === TOTAL_QUESTIONS){\n      setGameOver(true);\n    }\n    else {\n      setNumber(nextQuestion);\n    }\n  }\n\n  return (\n    <>\n      <GlobalStyle />\n      <div className=\"App\">\n      <h1>My Quiz App</h1>\n      {\n        gameOver || userAnswers.length === TOTAL_QUESTIONS ?\n        <button className='Start' onClick={startTrivia}>Start</button> : \n        null\n      }\n      {\n        !gameOver ? <p className='score'>Score:{score}</p> : null\n      }\n      {\n        loading ? <p>Loading Questions...</p> : null\n      }\n      { !loading && !gameOver && ( \n        <QuestionCard \n          questionNr={number+1}\n          totalQuestions={TOTAL_QUESTIONS}\n          question={questions[number].question}\n          answers={questions[number].answers}\n          userAnswer={userAnswers? userAnswers[number] : undefined}\n          callback={checkAnswer}\n        />\n        ) \n      }\n      {\n        !loading && !gameOver && userAnswers.length === number+1 && number !== TOTAL_QUESTIONS-1 ?\n        (<button className='Next' onClick={nextQuestion}>Next</button>) :\n        null\n      }\n      \n    </div>\n    </>\n    \n  );\n}\n\nexport default App;\n"],"mappings":"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"},"metadata":{},"sourceType":"module"}