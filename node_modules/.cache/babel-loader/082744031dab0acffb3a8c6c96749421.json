{"ast":null,"code":"var _jsxFileName = \"/Users/abhinavshirur/Documents/Projects/my-app/src/App.tsx\",\n    _s = $RefreshSig$();\n\nimport React, { useState } from 'react';\nimport './App.css';\nimport { fetchQuizQuestions } from './Api'; //Components import\n\n//Types import\nimport { Difficulty } from './Api';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst TOTAL_QUESTIONS = 10;\n\nconst App = () => {\n  _s();\n\n  const [loading, setLoading] = useState(false);\n  const [questions, setQuestions] = useState([]);\n  const [number, setNumber] = useState(0);\n  const [userAnswers, setUserAnswers] = useState([]);\n  const [score, setScore] = useState(0);\n  const [gameOver, setGameOver] = useState(true);\n\n  const startTrivia = async () => {\n    setLoading(true);\n    setGameOver(false);\n    const newQuestions = await fetchQuizQuestions(TOTAL_QUESTIONS, Difficulty.EASY);\n    setQuestions(newQuestions);\n    setScore(0);\n    setUserAnswers([]);\n    setNumber(0);\n    setLoading(false);\n  };\n\n  const checkAnswer = e => {};\n\n  const nextQuestion = () => {};\n\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    className: \"App\",\n    children: [/*#__PURE__*/_jsxDEV(\"h1\", {\n      children: \"My Quiz App\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 57,\n      columnNumber: 7\n    }, this), gameOver || userAnswers.length === TOTAL_QUESTIONS ? /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"Start\",\n      onClick: startTrivia,\n      children: \"Start\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 60,\n      columnNumber: 9\n    }, this) : null, !gameOver ? /*#__PURE__*/_jsxDEV(\"p\", {\n      className: \"score\",\n      children: \"Score:\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 64,\n      columnNumber: 20\n    }, this) : null, /*#__PURE__*/_jsxDEV(\"p\", {\n      children: \"Loading Questions...\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 65,\n      columnNumber: 7\n    }, this), /*#__PURE__*/_jsxDEV(\"button\", {\n      className: \"Next\",\n      onClick: nextQuestion,\n      children: \"Next\"\n    }, void 0, false, {\n      fileName: _jsxFileName,\n      lineNumber: 75,\n      columnNumber: 7\n    }, this)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 56,\n    columnNumber: 5\n  }, this);\n};\n\n_s(App, \"3vxO9CiM0ITniaGpI+eu+AjXM9U=\");\n\n_c = App;\nexport default App;\n\nvar _c;\n\n$RefreshReg$(_c, \"App\");","map":{"version":3,"names":["React","useState","fetchQuizQuestions","Difficulty","TOTAL_QUESTIONS","App","loading","setLoading","questions","setQuestions","number","setNumber","userAnswers","setUserAnswers","score","setScore","gameOver","setGameOver","startTrivia","newQuestions","EASY","checkAnswer","e","nextQuestion","length"],"sources":["/Users/abhinavshirur/Documents/Projects/my-app/src/App.tsx"],"sourcesContent":["import React, {useState} from 'react';\nimport './App.css';\nimport { fetchQuizQuestions } from './Api';\n\n//Components import\nimport {QuestionCard} from './components/QuestionCard';\n\n//Types import\nimport { Difficulty, QuestionState } from './Api';\n\nconst TOTAL_QUESTIONS = 10;\n\ntype AnswerObject = {\n  question: string,\n  answer: string,\n  correct: boolean,\n  correctAnswer: string\n}\n\nconst App = () => { \n\n  const [loading, setLoading] = useState<boolean>(false);\n  const [questions, setQuestions] = useState<QuestionState[]>([]);\n  const [number, setNumber] = useState<number>(0);\n  const [userAnswers, setUserAnswers] = useState<AnswerObject[]>([]);\n  const [score, setScore] = useState<number>(0);\n  const [gameOver, setGameOver] = useState<boolean>(true);\n\n\n  const startTrivia = async () => {\n    setLoading(true);\n    setGameOver(false);\n\n    const newQuestions = await(fetchQuizQuestions(\n      TOTAL_QUESTIONS,\n      Difficulty.EASY\n    ));\n\n    setQuestions(newQuestions);\n    setScore(0);\n    setUserAnswers([]);\n    setNumber(0);\n    setLoading(false);\n  }\n\n  const checkAnswer = (e: React.MouseEvent<HTMLButtonElement>) => {\n\n  }\n\n  const nextQuestion = () => {\n\n\n  }\n\n  return (\n    <div className=\"App\">\n      <h1>My Quiz App</h1>\n      {\n        gameOver || userAnswers.length === TOTAL_QUESTIONS ?\n        <button className='Start' onClick={startTrivia}>Start</button> : \n        null\n      }\n      {\n        !gameOver? <p className='score'>Score:</p>: null}\n      <p>Loading Questions...</p>\n      {/* <QuestionCard \n        questionNr={number+1}\n        totalQuestions={TOTAL_QUESTIONS}\n        question={questions[number].question}\n        answers={questions[number].answers}\n        userAnswer={userAnswers? userAnswers[number] : undefined}\n        callback={checkAnswer}\n      /> */\n      }\n      <button className='Next' onClick={nextQuestion}>Next</button>\n    </div>\n  );\n}\n\nexport default App;\n"],"mappings":";;;AAAA,OAAOA,KAAP,IAAeC,QAAf,QAA8B,OAA9B;AACA,OAAO,WAAP;AACA,SAASC,kBAAT,QAAmC,OAAnC,C,CAEA;;AAGA;AACA,SAASC,UAAT,QAA0C,OAA1C;;AAEA,MAAMC,eAAe,GAAG,EAAxB;;AASA,MAAMC,GAAG,GAAG,MAAM;EAAA;;EAEhB,MAAM,CAACC,OAAD,EAAUC,UAAV,IAAwBN,QAAQ,CAAU,KAAV,CAAtC;EACA,MAAM,CAACO,SAAD,EAAYC,YAAZ,IAA4BR,QAAQ,CAAkB,EAAlB,CAA1C;EACA,MAAM,CAACS,MAAD,EAASC,SAAT,IAAsBV,QAAQ,CAAS,CAAT,CAApC;EACA,MAAM,CAACW,WAAD,EAAcC,cAAd,IAAgCZ,QAAQ,CAAiB,EAAjB,CAA9C;EACA,MAAM,CAACa,KAAD,EAAQC,QAAR,IAAoBd,QAAQ,CAAS,CAAT,CAAlC;EACA,MAAM,CAACe,QAAD,EAAWC,WAAX,IAA0BhB,QAAQ,CAAU,IAAV,CAAxC;;EAGA,MAAMiB,WAAW,GAAG,YAAY;IAC9BX,UAAU,CAAC,IAAD,CAAV;IACAU,WAAW,CAAC,KAAD,CAAX;IAEA,MAAME,YAAY,GAAG,MAAMjB,kBAAkB,CAC3CE,eAD2C,EAE3CD,UAAU,CAACiB,IAFgC,CAA7C;IAKAX,YAAY,CAACU,YAAD,CAAZ;IACAJ,QAAQ,CAAC,CAAD,CAAR;IACAF,cAAc,CAAC,EAAD,CAAd;IACAF,SAAS,CAAC,CAAD,CAAT;IACAJ,UAAU,CAAC,KAAD,CAAV;EACD,CAdD;;EAgBA,MAAMc,WAAW,GAAIC,CAAD,IAA4C,CAE/D,CAFD;;EAIA,MAAMC,YAAY,GAAG,MAAM,CAG1B,CAHD;;EAKA,oBACE;IAAK,SAAS,EAAC,KAAf;IAAA,wBACE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADF,EAGIP,QAAQ,IAAIJ,WAAW,CAACY,MAAZ,KAAuBpB,eAAnC,gBACA;MAAQ,SAAS,EAAC,OAAlB;MAA0B,OAAO,EAAEc,WAAnC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QADA,GAEA,IALJ,EAQI,CAACF,QAAD,gBAAW;MAAG,SAAS,EAAC,OAAb;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAAX,GAA4C,IARhD,eASE;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QATF,eAmBE;MAAQ,SAAS,EAAC,MAAlB;MAAyB,OAAO,EAAEO,YAAlC;MAAA;IAAA;MAAA;MAAA;MAAA;IAAA,QAnBF;EAAA;IAAA;IAAA;IAAA;EAAA,QADF;AAuBD,CA1DD;;GAAMlB,G;;KAAAA,G;AA4DN,eAAeA,GAAf"},"metadata":{},"sourceType":"module"}